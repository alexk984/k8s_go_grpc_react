version: '3.8'

services:
  # Go gRPC сервер
  grpc-server:
    build:
      context: .
      dockerfile: Dockerfile.server
    ports:
      - "8080:8080"
      - "9090:9090"
    networks:
      - app-network
    depends_on:
      - prometheus

  # HTTP Gateway
  http-gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    ports:
      - "8081:8081"
    networks:
      - app-network
    depends_on:
      - grpc-server
    environment:
      - GRPC_SERVER_ADDR=grpc-server:8080

  # React веб-приложение
  web-app:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    networks:
      - app-network
    depends_on:
      - http-gateway
    environment:
      - REACT_APP_API_BASE=http://localhost:8081/api

  # Prometheus для метрик
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - app-network

  # Grafana для визуализации
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - app-network
    depends_on:
      - prometheus

volumes:
  prometheus-data:
  grafana-data:

networks:
  app-network:
    driver: bridge 